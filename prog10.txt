Backend/index.js 
const express = require('express'); 
const cors = require('cors'); 
const bodyParser = require('body-parser'); 
const app = express(); 
const PORT = 5000; 
let users = []; 
let results = []; 
let quiz = [ 
{ q: "2 + 2", a: ["3", "4", "5"], correct: "4" }, 
{ q: "What does RAM stand for? ", a: ["Random Access Monitor", "Random Access 
Memory", "Read-Only Memory"], correct: "Random Access Memory" }, 
{ q: "What do you call the “brain” of the computer?", a: ["CPU", "RAM", "Hard Drive"], 
correct: "CPU" }, 
{ q: "Which of this is a leap year?", a: ["2020", "2021", "2022"], correct: "2020" }, 
{ q: "Who wrote 'Romeo and Juliet'?", a: ["Charles Dickens", "William Shakespeare", 
"Mark Twain"], correct: "William Shakespeare" } 
]; 
app.use(cors()); 
app.use(bodyParser.json()); 
app.post('/register', (req, res) => { 
const { username, password, isAdmin } = req.body; 
if (users.find(u => u.username === username)) return res.status(400).send("User exists"); 
users.push({ username, password, isAdmin }); 
res.send("Registered"); 
}); 
app.post('/login', (req, res) => { 
const { username, password } = req.body; 
const user = users.find(u => u.username === username && u.password === password); 
if (!user) return res.status(401).send("Invalid"); 
res.json({ username: user.username, isAdmin: user.isAdmin }); 
}); 
app.get('/quiz', (req, res) => res.json(quiz)); 
app.post('/submit', (req, res) => { 
const { username, answers } = req.body; 
const score = quiz.reduce((s, q, i) => s + (q.correct === answers[i] ? 1 : 0), 0); 
  results.push({ username, score }); 
  res.send("Submitted"); 
}); 
 
app.get('/results', (req, res) => res.json(results)); 
app.listen(PORT, () => console.log(`Server on http://localhost:${PORT}`)); 
Frontend/App.js 
import React, { useState } from 'react'; 
import './App.css'; 
 
const URL = 'http://localhost:5000'; 
 
function App() { 
  const [user, setUser] = useState(null); 
  const [quiz, setQuiz] = useState([]); 
  const [answers, setAnswers] = useState([]); 
  const [results, setResults] = useState([]); 
  const [showLogin, setShowLogin] = useState(true); 
 
  const login = async (e) => { 
    e.preventDefault(); 
    const data = Object.fromEntries(new FormData(e.target)); 
    const res = await fetch(`${URL}/login`, { 
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' }, 
      body: JSON.stringify(data), 
    }); 
    if (res.ok) setUser(await res.json()); 
    else alert('Login failed'); 
  }; 
 
  const register = async (e) => { 
    e.preventDefault(); 
    const data = Object.fromEntries(new FormData(e.target)); 
    await fetch(`${URL}/register`, { 
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' }, 
      body: JSON.stringify(data), 
    }); 
    alert('Registered, now login'); 
    setShowLogin(true); 
  }; 
 
  const startQuiz = async () => { 
    const res = await fetch(`${URL}/quiz`); 
    const data = await res.json(); 
    setQuiz(data); 
    setAnswers(Array(data.length).fill('')); 
  }; 
 
  const submitQuiz = async () => { 
    await fetch(`${URL}/submit`, { 
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' }, 
      body: JSON.stringify({ username: user.username, answers }), 
    }); 
    alert('Submitted!'); 
    setQuiz([]); 
  }; 
 
  const loadResults = async () => { 
    const res = await fetch(`${URL}/results`); 
    setResults(await res.json()); 
  }; 
 
  if (!user) return ( 
    <div className="container"> 
      <h2>{showLogin ? 'Login' : 'Register'}</h2> 
 
      {showLogin ? ( 
        <form className="form" onSubmit={login}> 
          <input name="username" placeholder="Username" required /> 
          <input name="password" type="password" placeholder="Password" required /> 
          <button type="submit">Login</button> 
          <p className="toggle-text"> 
            Don’t have an account? <span className="link" onClick={() => 
setShowLogin(false)}>Register here</span> 
          </p> 
        </form> 
      ) : ( 
        <form className="form" onSubmit={register}> 
          <input name="username" placeholder="Username" required /> 
          <input name="password" type="password" placeholder="Password" required /> 
          <label className="checkbox"> 
            <input type="checkbox" name="isAdmin" /> Register as Admin 
          </label> 
          <button type="submit">Register</button> 
          <p className="toggle-text"> 
            Already have an account? <span className="link" onClick={() => 
setShowLogin(true)}>Login here</span> 
          </p> 
        </form> 
      )} 
    </div> 
  ); 
 
  if (user.isAdmin) return ( 
    <div className="container"> 
      <h1>Admin Dashboard</h1> 
      <p><strong>Logged in as:</strong> {user.username}</p> 
      <button className="load-btn" onClick={loadResults}>Load Results</button> 
      <ul> 
        {results.map((r, i) => ( 
          <li key={i}><strong>{r.username}</strong>: {r.score}</li> 
        ))} 
      </ul> 
    </div> 
  ); 
 
  return ( 
    <div className="container"> 
      <h1>Welcome, {user.username}</h1> 
 
      {!quiz.length && ( 
        <button className="primary-btn" onClick={startQuiz}>Take Quiz</button> 
      )} 
 
      {quiz.length > 0 && ( 
        <div className="quiz"> 
          {quiz.map((q, i) => ( 
            <div key={i} className="question"> 
              <p>{i + 1}. {q.q}</p> 
              {q.a.map((opt, j) => ( 
                <label key={j}> 
                  <input 
                    type="radio" 
                    name={`q${i}`} 
                    value={opt} 
                    onChange={() => { 
                      const newAns = [...answers]; 
                      newAns[i] = opt; 
                      setAnswers(newAns); 
                    }} 
                  /> 
                  {opt} 
                </label> 
              ))} 
</div> 
))} 
<button className="submit-btn" onClick={submitQuiz}>Submit</button> 
</div> 
)} 
</div> 
); 
} 
export default App; 